name: Checks
on:
  push:
    branches:
      - main
  pull_request:

env:
  # https://github.com/actions/setup-go#supported-version-syntax
  # ex:
  # - 1.18beta1 -> 1.18.0-beta.1
  # - 1.18rc1 -> 1.18.0-rc.1
  GO_VERSION: '1.25'

jobs:
  # Check if there is any dirty change for go mod tidy
  go-mod:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-go@v6
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Check go mod
        run: |
          go mod tidy
          git diff --exit-code go.mod
          git diff --exit-code go.sum

  # Check generated documentation is up-to-date
  check-generated:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v6
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Install tools
        run: make tools
      - name: Check generated files are up-to-date
        run: |
          make docs
          git diff --exit-code docs/

  # Note: the command `run` is tested by the other workflows (`make test`).
  check-commands:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-go@v6
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Build terraform-provider-dotfiles
        run: make build

      - run: ./terraform-provider-dotfiles --version || echo "Version command not available (expected for Terraform provider)"

      - name: Check provider can be loaded
        run: |
          echo 'terraform { required_providers { dotfiles = { source = "local/jamesainslie/dotfiles" } } }' > test.tf
          echo 'provider "dotfiles" { dotfiles_root = "/tmp/test" }' >> test.tf
          terraform init || echo "Terraform not available in CI (expected)"
          rm -f test.tf

  # Check that the provider builds correctly
  check-provider-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-go@v6
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Install tools
        run: make tools
      - name: Run comprehensive quality checks
        run: make quality
      - name: Test goreleaser config
        run: |
          go install github.com/goreleaser/goreleaser@latest
          goreleaser check
          goreleaser build --snapshot --clean
