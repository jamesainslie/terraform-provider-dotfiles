# GoReleaser configuration for terraform-provider-dotfiles
# Documentation: https://goreleaser.com
version: 2

# Project configuration
project_name: terraform-provider-dotfiles
dist: dist

# Environment variables required for build
env:
  - CGO_ENABLED=0
  - GO111MODULE=on
  - GOPROXY=https://proxy.golang.org,direct

# Git configuration
git:
  tag_sort: -version:refname
  prerelease_suffix: "-"

# Changelog configuration
changelog:
  sort: asc
  use: github
  groups:
    - title: 'New Features'
      regexp: '^.*?feat(\(.+\))??!?:.+$'
      order: 0
    - title: 'Bug Fixes'
      regexp: '^.*?fix(\(.+\))??!?:.+$'
      order: 1
    - title: 'Performance Improvements'
      regexp: '^.*?perf(\(.+\))??!?:.+$'
      order: 2
    - title: 'Refactoring'
      regexp: '^.*?refactor(\(.+\))??!?:.+$'
      order: 3
    - title: 'Documentation'
      regexp: '^.*?docs(\(.+\))??!?:.+$'
      order: 4
    - title: 'Tests'
      regexp: '^.*?test(\(.+\))??!?:.+$'
      order: 5
    - title: 'Other'
      order: 999
  filters:
    exclude:
      - '^chore'
      - '^ci'
      - '^build'
      - typo
      - merge conflict
      - Merge pull request
      - Merge remote-tracking branch
      - Merge branch

# Build configuration
builds:
  - id: terraform-provider-dotfiles
    binary: terraform-provider-dotfiles_v{{ .Version }}
    main: .
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - "386"
      - amd64
      - arm
      - arm64
    goarm:
      - "6"
      - "7"
    ignore:
      # Darwin doesn't support 32-bit or ARM6
      - goos: darwin
        goarch: "386"
      - goos: darwin
        goarch: arm
        goarm: "6"
      # Windows ARM is not well supported yet
      - goos: windows
        goarch: arm
      - goos: windows
        goarch: arm64
    ldflags:
      - -s -w
      - -X main.version={{.Version}}
      - -X main.commit={{.Commit}}
      - -X main.date={{.Date}}
    flags:
      - -trimpath
      - -mod=readonly
    env:
      - CGO_ENABLED=0

# Archive configuration
archives:
  - id: terraform-provider-dotfiles
    name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
    formats: [zip]
    files:
      - LICENSE
      - README.md
      - CHANGELOG.md

# Checksum configuration
checksum:
  name_template: "{{ .ProjectName }}_{{ .Version }}_SHA256SUMS"
  algorithm: sha256

# Signing configuration
signs:
  - id: terraform-provider-dotfiles
    artifacts: checksum
    args:
      - "--batch"
      - "--local-user"
      - "{{ .Env.GPG_FINGERPRINT }}"
      - "--output"
      - "${signature}"
      - "--detach-sign"
      - "${artifact}"

# GitHub release configuration
release:
  github:
    owner: jamesainslie
    name: terraform-provider-dotfiles
  draft: false
  prerelease: auto
  mode: replace
  header: |
    ## Release {{ .Tag }} ({{ .Date }})

    This release of the terraform-provider-dotfiles includes the following changes:
  footer: |
    ## Installation

    ### Terraform Registry (Recommended)
    ```hcl
    terraform {
      required_providers {
        dotfiles = {
          source  = "jamesainslie/dotfiles"
          version = "{{ .Tag }}"
        }
      }
    }
    ```

    ### Manual Installation
    Download the appropriate binary for your platform from the assets below and follow the [Terraform plugin installation guide](https://developer.hashicorp.com/terraform/cli/config/config-file#implied-local-mirror-directories).

    ## Verification

    All binaries are signed with GPG key `{{ .Env.GPG_FINGERPRINT }}` and checksums are provided.

    ```bash
    # Verify checksum
    sha256sum -c terraform-provider-dotfiles_{{ .Version }}_SHA256SUMS

    # Verify signature
    gpg --verify terraform-provider-dotfiles_{{ .Version }}_SHA256SUMS.sig terraform-provider-dotfiles_{{ .Version }}_SHA256SUMS
    ```

    **Full Changelog**: https://github.com/jamesainslie/terraform-provider-dotfiles/compare/{{ .PreviousTag }}...{{ .Tag }}
  extra_files:
    - glob: terraform-registry-manifest.json
    - glob: docs/**/*.md

# Metadata for Terraform Registry
metadata:
  mod_timestamp: "{{ .CommitTimestamp }}"

# Upload to Terraform Registry (if configured)
publishers:
  - name: terraform-registry
    ids:
      - terraform-provider-dotfiles
    checksum: true
    signature: true
    env:
      - TF_REGISTRY_TOKEN={{ .Env.TF_REGISTRY_TOKEN }}
    cmd: |
      if [ -n "$TF_REGISTRY_TOKEN" ]; then
        echo "Publishing to Terraform Registry..."
        # This would integrate with terraform registry API
        echo "Registry publication would happen here"
      else
        echo "No Terraform Registry token provided, skipping registry publication"
      fi

# Validation
before:
  hooks:
    - go mod tidy
    - go mod download
    - go generate ./...
    - make quality

# Announcement configuration
announce:
  skip: "{{ .Env.SKIP_ANNOUNCE | default \"false\" }}"
